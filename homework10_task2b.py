"""
Возьмите 1-3 любые задания из прошлых семинаров (например сериализация данных), которые вы уже решали. Превратите
функции в методы класса, а параметры в свойства. Задания должны решаться через вызов методов экземпляра.
Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей. Дано a, b, c - стороны предполагаемого
треугольника. Требуется сравнить длину каждого отрезка-стороны с суммой двух других. Если хотя бы в одном случае отрезок окажется
больше суммы двух других, то треугольника с такими сторонами не существует. Отдельно сообщить является ли треугольник разносторонним,
равнобедренным или равносторонним.
"""


class TriangleExistance:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c

    def check_sides(self):
        if self.a > self.b + self.c or self.b > self.a + self.c or self.c > self.a + self.b:
            return f'Треугольника с такими сторонами не существует'
        else:
            if self.a == self.b == self.c:
                return f'Равносторонний треугольник'
            elif self.a == self.b or self.a == self.c or self.b == self.c:
                return f'Равнобедренный треугольник'
            else:
                return f'Разносторонний треугольник'


a = float(input('Определим существование треугольника. Введите сторону a: '))
b = float(input('Введите сторону b: '))
c = float(input('Введите сторону c: '))
t = TriangleExistance(a, b, c)
print(t.check_sides())
