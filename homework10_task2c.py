import random

"""
Возьмите 1-3 любые задания из прошлых семинаров (например сериализация данных), которые вы уже решали. Превратите
функции в методы класса, а параметры в свойства. Задания должны решаться через вызов методов экземпляра.
3. Добавьте в пакет, созданный на семинаре шахматный модуль. Внутри него напишите код, решающий задачу о 8 ферзях.
Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8 ферзей
на доске, определите, есть ли среди них пара бьющих друг друга. Программа получает на вход восемь пар чисел, каждое
число от 1 до 8 - координаты 8 ферзей. Если ферзи не бьют друг друга верните истину, а если бьют - ложь.
"""


class Chess:
    def __init__(self, pos, needed_good_num):
        self.pos = pos
        self.needed_good_num = needed_good_num

    def beat_queens(self, pos):
        n = len(pos)
        beat = False
        for i in range(n):
            for j in range(i + 1, n):
                if pos[i][0] == pos[j][0] or pos[i][1] == pos[j][1] or abs(
                        pos[i][0] - pos[j][0]) == abs(pos[i][1] - pos[j][1]):
                    beat = True
        if beat:
            return False  # Ферзи бьют друг друга
        else:
            return True  # Ферзи не бьют друг друга


game1 = Chess([[5, 3], [1, 2], [4, 1], [8, 4], [2, 5], [7, 6], [3, 7], [6, 8]], 4)
print(game1.beat_queens(
    [[5, 3], [1, 2], [4, 1], [8, 4], [2, 5], [7, 6], [3, 7], [6, 8]]))  # True - ферзи не бьют друг друга
game2 = Chess([[1, 6], [2, 3], [3, 3], [5, 4], [8, 7], [6, 2], [3, 8], [4, 5]], 4)  # False - ферзи бьют друг друга
print(game2.beat_queens([[1, 6], [2, 3], [3, 3], [5, 4], [8, 7], [6, 2], [3, 8], [4, 5]]))
